# 2025-01-32
- Update input system to be more state based than event based.
  - Expose input changes to the frame update loop.
  - Have isolated input code that turns the events into queryable state.
  - Done!
  - Implemented key repeating manually out of necessity but also enables us to reset the repeating for ArrowDown.

# 2025-01-17
- Added type checking using JSDoc and Deno to run the actual checking.
  - https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html
  - https://docs.deno.com/runtime/reference/cli/check/
- It works amazingly well yay.
- Put types on everything.
- Added a script for running the checker with watch.

# 2025-01-03
- Copy paste row col code is dangerous.
  - Made mistake with code that converted to x y and got the ordering wrong.
- Reconsidered the rotating plan, just use numbers in the hard coded orientations and have a mapping from numbers to letters in each live piece.
- Added collisions with grid board edges and existing pieces.
- Added baking pieces into the grid when they land.
- Added collision checks for arrow keyboard inputs.
  - Need to add same for Space drop.
- Added game over check with temporary set grid all red, will work out something more permanent later.

# 2024-12-12
- Changed up key to rotate piece.
- Added game loop.
- Added timer primitive.

# 2024-12-11
- Make Tetris with Scrabble:
  - Tetris game but pieces have letters in them.
  - Scoring:
    - Line clears don't score anything.
    - Making words scores points using scrabble scoring.
    - Maybe have the score multiplier in the background of the grid.
  - Can words have letters before and after them or do they have to be clean?
    - E.g. does the sequence "jcdogpn" score "dog" or not?
    - Might be very difficult to get clean words while playing Tetris.
    - Would probably need blank squares in pieces to manage the gaps between words.
    - If "jcdogpn" scores "dog" then it would score "do" as well right?
- Calling this one tetris-scrabble to leave room for scrabble-tetris.
  - scrabble-tetris is played on a scrabble board.
  - Each turn you're given a tetris piece you have to fill up with your scrabble letters.
  - The tetris piece is falling down onto the scrabble board at the same time.
  - You have to fill it with letters and pick the place in time before it lands.
- Implemented piece shapes.
- Implemented canvas with grid drawing.
- Implemented piece drawing.
  - Not sure what the standard colours are.
  - Picked closeish colours from memory.
- Implemented picking random piece.
- Piece shapes have hardcoded orientations.
  - Decided to hard code orientations because simpler than computing rotations.
  - Realise now that will need to compute the rotations anyway because the letters will be randomised and need to stay consistent across rotation.
  - Rotation is awkward with the 2x2 square block.
- Added input handling.
  - Simply takes game state and event and updates game state.
- Added periodic piece refreshing for testing.
  - Runs in a separate loop from the main draw loop.
  - Probably won't do this in actual game, instead use timing values in the game state with a single frame based loop.
